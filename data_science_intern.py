# -*- coding: utf-8 -*-
"""Data Science Intern

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GHkoaMKlbHqE8vwoCpQb2PRlCyDPKdgO
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

# Load datasets
train_data = pd.read_csv('/content/Dataset.txt', sep='\t')
test_data = pd.read_csv('/content/Dataset_test.txt', sep='\t')

# Display basic info
print("Training Data Shape:", train_data.shape)
print("Test Data Shape:", test_data.shape)

X = train_data.drop(columns=['C'])  # Features
y = train_data['C']  # Target variable

print("Missing values in features:\n", X.isnull().sum())
print("Missing values in target:\n", y.isnull().sum())

test_data = pd.read_csv('Dataset_test.txt', sep='\t')
print("Columns in Test Data:", test_data.columns)

# Split the training data for validation
X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, random_state=42)
print("X_train shape:", X_train.shape)
print("X_valid shape:", X_valid.shape)
print("y_train shape:", y_train.shape)
print("y_valid shape:", y_valid.shape)

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

print(X_train.dtypes)

# Train the model on the processed data
model.fit(X_train, y_train)

# Make predictions on the validation set
y_pred_valid = model.predict(X_valid)

# Evaluate the model
accuracy = accuracy_score(y_valid, y_pred_valid)
print("Validation Accuracy:", accuracy)